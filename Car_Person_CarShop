//Person
function Person(name, car, personalNumber, isMale) {
    if (typeof name === 'string' && name.trim() > 0) {
        this.name = name;
    }
    this.car = (typeof car === 'object') ? car : null;
    this.personalNumber = (personalNumber.length === 10 && typeof personalNumber === 'string') ?
        personalNumber : '';
    this.isMale = (typeof isMale === 'boolean') ? isMale : false;
    this.money = 0;
    this.friends = new Array(3);

    this.buyCar = function (car) {
        if (this.money >= car.price) {
            this.money -= car.price;
            this.car = car;
            if (car.owner !== null) {
                car.owner.car = null;
                car.owner.money += car.price;
            }
            car.changeOwner(this);
            return true;
        } else {
            console.log("you don't have enought money");
            return false;
        }
    }

    this.sellCarForScrap = function () {
        var priceForScrap = this.car.calculateCarPriceForScrap(0.8);
        this.money += priceForScrap;
        this.car.owner = null;
        this.car = null;
        return this.money;
    }
}


//Car
function Car(model, isSport, color) {
    this.model = model;
    this.isSport = isSport;
    this.color = color;
    this.price = 0;
    this.owner = null;

    this.isMoreExpensive = function (car) {
        if (typeof car === 'object') {
            return this.price > car.price;
        }
    }

    this.calculateCarPriceForScrap = function (metalPrice) {
        var coef = 0.2;
        if (this.color === 'black' || this.color === 'white') {
            coef += 0.05;
        }
        if (this.isSport) {
            coef += 0.05;
        }
        return metalPrice * coef;
    }
    this.changeOwner = function (newOwner) {
        if (typeof newOwner === 'object') {
            this.owner = newOwner;
        }
    }
}


//Car Shop
function CarShop(capacity) {
    this.capacity = (capacity > 0) ? capacity : 0;
    this.cars = new Array(capacity);
    this.size = 0;
    this.crrCar = 0;

    this.addCar = function (car) {
        if (this.size < this.capacity) {
            this.cars[this.size] = car;
            this.size++;
        }
    }

    this.getNextCar = function () {
        return this.cars[this.crrCar++];
    }

    this.sellNextCar = function (buyer) {
        var nextCar = this.getNextCar();
        if (buyer.buyCar(nextCar)) {
            console.log("the car was sold");
        }
        this.removeCar(nextCar);
    }

    this.removeCar = function (car) {
        var index = this.cars.indexOf(car);
        this.cars.splice(index, 1);
        this.size--;
    }

    this.printCar = function (car) {
        // const printableFields=['model','color','price'];
        // let displayedInfo='';
        // printableFields.forEach(field=>{
        //     displayedInfo+=car[field]+' ';
        // })
        // console.log(displayedInfo);

        console.log(car.model + " " + car.color + " " + car.price);
    }

    this.showAllCarsInTheShop = function () {
        this.cars.forEach(car => this.printCar(car));
    }

    this.mostExpensiveCar = function () {
        var max = 0;
        var maxIndex = 0;
        for (let index = 0; index < this.size; index++) {
            if (this.cars[index].price > max) {
                max = this.cars[index].price;
                maxIndex=index;
            }
        }
        this.printCar(this.cars[maxIndex]);
    }

}



//Test

var car1 = new Car('opel', false, 'black');
car1.price = 20;
var car2 = new Car('mini', true, 'red');
car2.price = 10;

var me = new Person('sevi', null, '1234567890', false);
me.money = 200;
//me.buyCar(car2);
//console.log(me.money);

// console.log(car2.isMoreExpensive(car1));
// console.log(car1.calculateCarPriceForScrap(1));

var magazin = new CarShop(10);

magazin.addCar(car1);
magazin.addCar(car2);

// console.log(magazin.getNextCar());
// console.log(magazin.getNextCar());

// magazin.sellNextCar(me);
// console.log(me);
// console.log(magazin.cars);

//magazin.showAllCarsInTheShop();

magazin.mostExpensiveCar();
